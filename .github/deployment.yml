name: Deploy Remix Weather App to AKS

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'apps/remix-weather/**'
      - '.github/workflows/deploy.yml'
  push:
    branches: [ main ]
    paths:
      - 'apps/remix-weather/**'
      - '.github/workflows/deploy.yml'

permissions:
  id-token: write
  contents: read

env:
  REGISTRY: ${{ secrets.AZURE_CONTAINER_REGISTRY }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure Container Registry
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Azure CLI - ACR login
        run: az acr login --name $REGISTRY

      - name: Build and Push Docker Image
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -t $REGISTRY.azurecr.io/remix-weather:$IMAGE_TAG apps/remix-weather
          docker push $REGISTRY.azurecr.io/remix-weather:$IMAGE_TAG
        env:
          DOCKER_BUILDKIT: 1

  deploy-to-aks:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set AKS context
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME_TEST }} --overwrite-existing
          else
            az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME_PROD }} --overwrite-existing
          fi

      - name: Deploy to AKS
        run: |
          IMAGE_TAG=${{ github.sha }}
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            kubectl apply -f k8s/test/
            kubectl set image deployment/remix-weather remix-weather=${{ env.REGISTRY }}.azurecr.io/remix-weather:$IMAGE_TAG -n test
          else
            kubectl apply -f k8s/prod/
            kubectl set image deployment/remix-weather remix-weather=${{ env.REGISTRY }}.azurecr.io/remix-weather:$IMAGE_TAG -n prod
          fi
